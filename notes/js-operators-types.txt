There are different types of JavaScript operators:

    Arithmetic Operators
    Assignment Operators
    Comparison Operators
    Logical Operators
    Conditional Operators
    Type Operators


JavaScript Arithmetic Operators

Arithmetic Operators are used to perform arithmetic on numbers:
Arthmetic Operators Example
let a = 3;
let x = (100 + 50) * a;


Operator 	Description
    + 	    Addition
    - 	    Subtraction
    * 	    Multiplication
    ** 	    Exponentiation (ES2016)
    / 	    Division
    % 	    Modulus (Division Remainder)
    ++ 	    Increment
    -- 	    Decrement


    JavaScript Assignment Operators

Assignment operators assign values to JavaScript variables.

The Addition Assignment Operator (+=) adds a value to a variable.
Assignment
let x = 10;
x += 5;


Operator 	Example 	Same As
    = 	    x = y 	    x = y
    +=  	x += y 	    x = x + y
    -=  	x -= y 	    x = x - y
    *=  	x *= y 	    x = x * y
    /=  	x /= y 	    x = x / y
    %=  	x %= y 	    x = x % y
    **=  	x **=y 	    x = x ** y


Adding JavaScript Strings

The + operator can also be used to add (concatenate) strings.
Example
let text1 = "John";
let text2 = "Doe";
let text3 = text1 + " " + text2;

The result of text3 will be:
John Doe



The += assignment operator can also be used to add (concatenate) strings:
Example
let text1 = "What a very ";
text1 += "nice day";

The result of text1 will be:
What a very nice day


Adding Strings and Numbers

Adding two numbers, will return the sum, but adding a number and a string will return a string:
Example
let x = 5 + 5;
let y = "5" + 5;
let z = "Hello" + 5;

The result of x, y, and z will be:
10
55
Hello5 



JavaScript Comparison Operators
Operator 	Description
    == 	    equal to
    ===     equal value and equal type
    != 	    not equal
    !==     not equal value or not equal type
    > 	    greater than
    < 	    less than
    >= 	    greater than or equal to
    <= 	    less than or equal to
    ? 	    ternary operator



    JavaScript Logical Operators
Operator 	Description
    && 	    logical and
    || 	    logical or
    ! 	    logical not